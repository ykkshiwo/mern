{"version":3,"sources":["webpack:///./server/renderedPageRouter.jsx"],"names":["__webpack_require__","_reactRouter","_reactRouterDom","renderedPageRouter","Router","test","props","_classCallCheck","this","_this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","call","console","log","staticContext","state","issues","metadata","totalCount","React","Component","_react2","default","createElement","test2","get","req","res","url","fetch","then","response","json","result","r","i","html","ReactDOMServer","renderToString","StaticRouter","location","context","Route","_extends","exact","path","component","a","write","end"],"mappings":"ghBAAAA,EAAA,QAEAA,EAAA,KACAC,EAAAD,EAAA,QAEAA,EAAA,IAKAE,KAHAF,EAAA,OACAA,EAAA,OACAA,EAAA,KACAA,EAAA,uDAEA,IAAMG,EAAqB,IAAIC,UAEzBC,cAEJ,SAAAA,EAAYC,gGAAOC,CAAAC,KAAAH,GAAA,IAAAI,mKAAAC,CAAAF,MAAAH,EAAAM,WAAAC,OAAAC,eAAAR,IAAAS,KAAAN,KACTF,IADS,OAEfS,QAAQC,IAAI,YAAaP,EAAKH,MAAMW,eACpCR,EAAKS,MAAQ,CACTC,OAAQV,EAAKH,MAAMW,cAAcG,SAASC,YAJ/BZ,qUAFFa,UAAMC,+CAYnB,OACIC,EAAAC,QAAAC,cAAA,WAEIF,EAAAC,QAAAC,cAAA,cAASlB,KAAKU,MAAMC,kBAM5BQ,EAAQ,kBAAMH,EAAAC,QAAAC,cAAA,iCAEpBvB,EAAmByB,IAAI,IAAK,SAACC,EAAKC,GAChCf,QAAQC,IAAI,WACZD,QAAQC,IAAR,4BAAwCa,EAAIE,KAC5CC,kCAAkCH,EAAIE,KAAOE,KAAK,SAAAC,GAChD,OAAOA,EAASC,SACfF,KAAK,SAAAG,GACNrB,QAAQC,IAAI,aAAcoB,GAC1B,IAAMC,EAAI,CAACC,EAAGF,GAERG,EAAOC,UAAeC,eAC1BjB,EAAAC,QAAAC,cAACzB,EAAAyC,aAAD,CAAcC,SAAUd,EAAIE,IAAKa,QAASP,GAExCb,EAAAC,QAAAC,cAACxB,EAAA2C,MAADC,EAAA,CAAOC,OAAA,EAAMC,KAAK,UAAUC,UAAW5C,GAJ3B,CAAC6C,EAAE,OAKf1B,EAAAC,QAAAC,cAACxB,EAAA2C,MAAD,CAAOE,OAAA,EAAMC,KAAK,SAASC,UAAWtB,MAG1CG,EAAIqB,MAAJ,4CAEgBZ,EAFhB,cAIAT,EAAIsB,oBAqCOjD","file":"0.de3d29b809cd33a8b3ab.hot-update.js","sourcesContent":["import React from 'react';\r\n// import { renderToString } from 'react-dom/server';\r\nimport ReactDOMServer from \"react-dom/server\";\r\nimport { StaticRouter } from 'react-router';\r\n\r\nimport Router from 'express';\r\n\r\nimport template from './template.js';\r\nimport routes from '../src/Routes.jsx';\r\nimport ContextWrapper from '../src/ContextWrapper.jsx';\r\nimport { hashHistory, HashRouter, Redirect, withRouter, Route, BrowserRouter, history, Switch } from 'react-router-dom';\r\n\r\nconst renderedPageRouter = new Router();\r\n\r\nclass test extends React.Component {\r\n\r\n  constructor(props) {\r\n      super(props);\r\n      console.log(\"props的值是：\", this.props.staticContext);\r\n      this.state = {\r\n          issues: this.props.staticContext.metadata.totalCount,\r\n          //   totalCount: data.metadata.totalCount,\r\n      };\r\n  }\r\n\r\n  render() {\r\n      return (\r\n          <div>\r\n              {/* <button>{this.state.issues}</button> */}\r\n              <button>{this.state.issues}</button>\r\n          </div>\r\n      )\r\n  }\r\n}\r\n\r\nconst test2 = () => <p>Page is test2222222</p>;\r\n\r\nrenderedPageRouter.get('*', (req, res) => {\r\n  console.log(\"服务器启用成功\");\r\n  console.log(`http://127.0.0.1:3000/api${req.url}`);\r\n  fetch(`http://127.0.0.1:3000/api${req.url}`).then(response => {\r\n    return response.json();\r\n  }).then(result => {\r\n    console.log('从服务器返回的数据：', result);\r\n    const r = {i: result};\r\n    const context = {a:123};\r\n    const html = ReactDOMServer.renderToString(\r\n      <StaticRouter location={req.url} context={r}>\r\n        {/* <routes /> */}\r\n        <Route exact path='/issues' component={test} {...context} />\r\n        <Route exact path='/test2' component={test2} />\r\n      </StaticRouter>\r\n    );\r\n    res.write(`\r\n    <!doctype html>\r\n    <div id=\"app\">${html}</div>\r\n  `);\r\n    res.end();\r\n  })\r\n  // res.send(\"test now...\");\r\n  // res.status(200).send(template(html));\r\n  // res.send(\"test now...\");\r\n  // matchPath({ routes, location: req.url }, (error, redirectLocation, renderProps) => {\r\n  //   if (error) {\r\n  //     res.status(500).send(error.message);\r\n  //   } else if (redirectLocation) {\r\n  //     res.redirect(302, redirectLocation.pathname + redirectLocation.search);\r\n  //   } else if (renderProps) {\r\n  //     const componentsWithData = renderProps.components.filter(c => c.dataFetcher);\r\n  //     const dataFetchers = componentsWithData.map(c => c.dataFetcher({\r\n  //       params: renderProps.params, location: renderProps.location,\r\n  //       urlBase: 'http://localhost:3000', cookie: req.headers.cookie,\r\n  //     }));\r\n  //     Promise.all(dataFetchers).then((dataList) => {\r\n  //       let initialState = {};\r\n  //       dataList.forEach((namedData) => {\r\n  //         initialState = Object.assign(initialState, namedData);\r\n  //       });\r\n  //       const html = renderToString(\r\n  //         <ContextWrapper initialState={initialState} >\r\n  //           <RouterContext {...renderProps} />\r\n  //         </ContextWrapper>\r\n  //       );\r\n  //       res.status(200).send(template(html, initialState));\r\n  //     })\r\n  //     .catch(err => {\r\n  //       console.log(`Error rendering to string: ${err}`);\r\n  //     });\r\n  //   } else {\r\n  //     res.status(404).send('Not found');\r\n  //   }\r\n  // });\r\n});\r\n\r\nexport default renderedPageRouter;\r\n"],"sourceRoot":""}