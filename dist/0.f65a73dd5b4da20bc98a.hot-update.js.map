{"version":3,"sources":["webpack:///./server/server.js"],"names":["_renderedPageRouter","__webpack_require__","express","require","bodyParser","path","MongoClient","mn","Issue","app","use","static","json","get","req","res","console","log","resolve","filter","query","status","effort_lte","effort_gte","effort","$lte","parseInt","$gte","search","$text","$search","undefined","_summary","offset","_offset","limit","_limit","cursor","dbo","collection","find","sort","_id","skip","totalCount","count","then","result","toArray","issues","metadata","records","catch","error","message","aggregate","$match","$group","owner","$sum","results","stats","forEach","issueId","ObjectId","params","id","next","issue","post","newIssue","body","created","Date","insertOne","insertedId","err","put","validateIssue","convertIssue","update","savedIssue","delete","deleteOne","deleteResult","n","renderedPageRouter","setDb","newDb"],"mappings":"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","file":"0.f65a73dd5b4da20bc98a.hot-update.js","sourcesContent":["const express = require(\"express\");\r\nconst bodyParser = require('body-parser');\r\nconst os = require(\"os\");\r\nconst MongoClient = require('mongodb').MongoClient;\r\nconst path = require('path');\r\nconst mn = require('mongodb');\r\nconst Issue = require('./issue.js');\r\n\r\nconst app = express();\r\napp.use(express.static('statics'));  //使用钩子函数后根目录是d://mern\r\napp.use(express.static('../node_modules/bootstrap/dist/css/'));\r\napp.use(bodyParser.json());\r\n\r\nimport renderedPageRouter from './renderedPageRouter.jsx';\r\n\r\n// app.get('/api/issues', (req, res) => {\r\n//     console.log(\"服务器收到请求。\")\r\n//     const filter = {};\r\n//     if (req.query.status) filter.status = req.query.status;\r\n//     if (req.query.effort_lte || req.query.effort_gte) filter.effort = {};\r\n//     if (req.query.effort_lte) filter.effort.$lte = parseInt(req.query.effort_lte, 10);\r\n//     if (req.query.effort_gte) filter.effort.$gte = parseInt(req.query.effort_gte, 10);\r\n//     console.log(filter);\r\n//     dbo.collection('issues').find(filter).toArray().then(issues => {\r\n//         const metadata = { total_count: issues.length };\r\n//         res.json({ _metadata: metadata, records: issues });\r\n//     }).catch(error => {\r\n//         console.log(error);\r\n//         res.status(500).json({ message: `internal server error: ${error}` });\r\n//     })\r\n// });\r\n\r\napp.get('/app.js',(req, res) => {\r\n    console.log(path.resolve('static'));\r\n    // res.sendFile(path.resolve('../mern/statics/app.js'));\r\n})\r\n\r\napp.get('/api/issues', (req, res) => {\r\n    const filter = {};\r\n    if (req.query.status) filter.status = req.query.status;\r\n    if (req.query.effort_lte || req.query.effort_gte) filter.effort = {};\r\n    if (req.query.effort_lte) filter.effort.$lte = parseInt(req.query.effort_lte, 10);\r\n    if (req.query.effort_gte) filter.effort.$gte = parseInt(req.query.effort_gte, 10);\r\n    if (req.query.search) filter.$text = { $search: req.query.search };\r\n\r\n    if (req.query._summary === undefined) {\r\n        const offset = req.query._offset ? parseInt(req.query._offset, 10) : 0;\r\n        let limit = req.query._limit ? parseInt(req.query._limit, 10) : 20;\r\n        if (limit > 50) limit = 50;\r\n\r\n        const cursor = dbo.collection('issues').find(filter).sort({ _id: 1 })\r\n            .skip(offset)\r\n            .limit(limit);\r\n\r\n        let totalCount;\r\n        cursor.count(false).then(result => {\r\n            totalCount = result;\r\n            return cursor.toArray();\r\n        })\r\n            .then(issues => {\r\n                console.log(\"查询出的数据： \", issues);\r\n                res.json({ metadata: { totalCount }, records: issues });\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                res.status(500).json({ message: `Internal Server Error: ${error}` });\r\n            });\r\n    } else {\r\n        dbo.collection('issues').aggregate([\r\n            { $match: filter },\r\n            { $group: { _id: { owner: '$owner', status: '$status' }, count: { $sum: 1 } } },\r\n        ]).toArray()\r\n            .then(results => {\r\n                const stats = {};\r\n                results.forEach(result => {\r\n                    if (!stats[result._id.owner]) stats[result._id.owner] = {};\r\n                    stats[result._id.owner][result._id.status] = result.count;\r\n                });\r\n                res.json(stats);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                res.status(500).json({ message: `Internal Server Error: ${error}` });\r\n            });\r\n    }\r\n});\r\n\r\napp.get('/api/issues/:id', (req, res) => {\r\n    let issueId;\r\n    try {\r\n        issueId = mn.ObjectId(req.params.id);\r\n    } catch (error) {\r\n        res.status(422).json({ message: `Invalid issue ID : ${error}` });\r\n    }\r\n\r\n    dbo.collection('issues').find({ _id: issueId }).limit(1).next()\r\n        .then(issue => {\r\n            if (!issue) res.status(404).json({ message: `No such issue: ${issueId}` });\r\n            else res.json(issue);\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n            res.status(500).json({ message: `Invalid server: ${error}` })\r\n        })\r\n})\r\n\r\napp.post('/api/issues', (req, res) => {\r\n    const newIssue = req.body;\r\n    // newIssue.id = issues.length + 1;\r\n    newIssue.created = new Date();\r\n    if (!newIssue.status) {\r\n        newIssue.status = 'New';\r\n    }\r\n    dbo.collection('issues').insertOne(newIssue).then(result =>\r\n        dbo.collection('issues').find({ _id: result.insertedId }).limit(1).next()\r\n    ).then(newIssue => {\r\n        console.log(\"添加的数据是： \", newIssue);\r\n        res.json(newIssue);\r\n    }).catch(err => {\r\n        console.log(err);\r\n    });\r\n})\r\n\r\napp.put('/api/issues/:id', (req, res) => {\r\n    let issueId;\r\n    try {\r\n        issueId = mn.ObjectId(req.params.id);\r\n    } catch (error) {\r\n        res.status(422).json({ message: `Invalid issue ID format: ${error}` });\r\n        return;\r\n    }\r\n\r\n    const issue = req.body;\r\n    delete issue._id;\r\n\r\n    const err = Issue.validateIssue(issue);\r\n    if (err) {\r\n        res.status(422).json({ message: `Invalid request: ${err}` });\r\n        return;\r\n    } \r\n    console.log(\"Update immed...\");\r\n    console.log(Issue.convertIssue(issue));\r\n    dbo.collection('issues').update({ _id: issueId }, Issue.convertIssue(issue)).then(result =>\r\n        // console.log(\"Update success...\");\r\n        // console.log(result);\r\n        dbo.collection('issues').find({ _id: issueId }).limit(1).next()\r\n    ).then(savedIssue => {\r\n        console.log(\"保存的东西： \", savedIssue);\r\n        res.json(savedIssue);\r\n    }).catch(error => {\r\n        console.log(error);\r\n        res.status(500).json({ message: `Internal Server Error: ${error}` });\r\n    });\r\n});\r\n\r\napp.delete('/api/issues/:id', (req, res) => {\r\n    console.log(\"server will delete...\");\r\n    console.log(\"delete id is: \", req.params.id);\r\n    let issueId;\r\n    try {\r\n        issueId = mn.ObjectId(req.params.id);\r\n        console.log(\"now delete data...\", issueId);\r\n    } catch (error) {\r\n        res.status(422).json({ message: `Invalid issue ID format: ${error}` });\r\n        return;\r\n    }\r\n\r\n    dbo.collection('issues').deleteOne({ _id: issueId }).then((deleteResult) => {\r\n        if (deleteResult.result.n === 1) res.json({ status: 'OK' });\r\n        else res.json({ status: 'Warning: object not found' });\r\n    })\r\n        .catch(error => {\r\n            console.log(error);\r\n            res.status(500).json({ message: `Internal Server Error: ${error}` });\r\n        });\r\n});\r\n\r\napp.use('/', renderedPageRouter);\r\n\r\nlet dbo;\r\n// MongoClient.connect('mongodb://127.0.0.1:27017/').then(db => {\r\n//     dbo = db.db('issuetracker');\r\n//     app.listen(3000, () => {\r\n//         console.log('App started on port 3000');\r\n//     });\r\n// }).catch(error => {\r\n//     console.log('ERROR:', error);\r\n// });\r\n\r\nfunction setDb(newDb) {\r\n    dbo = newDb;\r\n  }\r\n  \r\n  export { app, setDb };"],"sourceRoot":""}