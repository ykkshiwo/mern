{"version":3,"sources":["webpack:///./server/renderedPageRouter.jsx"],"names":["__webpack_require__","_server","_reactRouter","_reactRouterDom","renderedPageRouter","Router","test","props","_classCallCheck","this","_this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","call","console","log","staticContext","state","issues","React","Component","_react2","default","createElement","test2","get","req","res","url","fetch","then","response","json","result","html","renderToString","StaticRouter","location","Route","_extends","exact","path","component","records","write","end"],"mappings":"ghBAAAA,EAAA,IACAC,EAAAD,EAAA,IACAE,EAAAF,EAAA,QAEAA,EAAA,IAKAG,KAHAH,EAAA,OACAA,EAAA,OACAA,EAAA,KACAA,EAAA,uDAEA,IAAMI,EAAqB,IAAIC,UAEzBC,cAEJ,SAAAA,EAAYC,gGAAOC,CAAAC,KAAAH,GAAA,IAAAI,mKAAAC,CAAAF,MAAAH,EAAAM,WAAAC,OAAAC,eAAAR,IAAAS,KAAAN,KACXF,IADW,OAEjBS,QAAQC,IAAI,UAAWP,EAAKH,MAAMW,eAClCR,EAAKS,MAAQ,CACXC,OAAQV,EAAKH,MAAMW,eAJJR,qUAFFW,UAAMC,+CAYrB,OACEC,EAAAC,QAAAC,cAAA,WAAMhB,KAAKU,MAAMC,iBAKjBM,EAAQ,kBAAMH,EAAAC,QAAAC,cAAA,iCAEpBrB,EAAmBuB,IAAI,IAAK,SAACC,EAAKC,GAChCb,QAAQC,IAAI,WACZD,QAAQC,IAAR,4BAAwCW,EAAIE,KAC5CC,kCAAkCH,EAAIE,KAAOE,KAAK,SAAAC,GAChD,OAAOA,EAASC,SACfF,KAAK,SAAAG,GACNnB,QAAQC,IAAI,aAAckB,GAC1B,IAAMC,GAAO,EAAAnC,EAAAoC,gBACXd,EAAAC,QAAAC,cAACvB,EAAAoC,aAAD,CAAcC,SAAUX,EAAIE,KAE1BP,EAAAC,QAAAC,cAACtB,EAAAqC,MAADC,EAAA,CAAOC,OAAA,EAAMC,KAAK,OAAOC,UAAWtC,GAAU6B,EAAOU,UACrDtB,EAAAC,QAAAC,cAACtB,EAAAqC,MAAD,CAAOE,OAAA,EAAMC,KAAK,QAAQC,UAAWlB,MAGzCG,EAAIiB,MAAJ,4CAEgBV,EAFhB,cAIAP,EAAIkB,oBAqCO3C","file":"0.3bc48a56842d38c2c626.hot-update.js","sourcesContent":["import React from 'react';\r\nimport { renderToString } from 'react-dom/server';\r\nimport { StaticRouter } from 'react-router';\r\n\r\nimport Router from 'express';\r\n\r\nimport template from './template.js';\r\nimport routes from '../src/Routes.jsx';\r\nimport ContextWrapper from '../src/ContextWrapper.jsx';\r\nimport { hashHistory, HashRouter, Redirect, withRouter, Route, BrowserRouter, history, Switch } from 'react-router-dom';\r\n\r\nconst renderedPageRouter = new Router();\r\n\r\nclass test extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(\"传过来的值是：\", this.props.staticContext);\r\n    this.state = {\r\n      issues: this.props.staticContext,\r\n      //   totalCount: data.metadata.totalCount,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>{this.state.issues}</div>\r\n    )\r\n  }\r\n}\r\n\r\nconst test2 = () => <p>Page is test2222222</p>;\r\n\r\nrenderedPageRouter.get('*', (req, res) => {\r\n  console.log(\"服务器启用成功\");\r\n  console.log(`http://127.0.0.1:3000/api${req.url}`);\r\n  fetch(`http://127.0.0.1:3000/api${req.url}`).then(response => {\r\n    return response.json();\r\n  }).then(result => {\r\n    console.log('从服务器返回的数据：', result);\r\n    const html = renderToString(\r\n      <StaticRouter location={req.url} >\r\n        {/* <routes /> */}\r\n        <Route exact path='/fwq' component={test} {...result.records} />\r\n        <Route exact path='/fwq2' component={test2} />\r\n      </StaticRouter>\r\n    );\r\n    res.write(`\r\n    <!doctype html>\r\n    <div id=\"app\">${html}</div>\r\n  `);\r\n    res.end();\r\n  })\r\n  // res.send(\"test now...\");\r\n  // res.status(200).send(template(html));\r\n  // res.send(\"test now...\");\r\n  // matchPath({ routes, location: req.url }, (error, redirectLocation, renderProps) => {\r\n  //   if (error) {\r\n  //     res.status(500).send(error.message);\r\n  //   } else if (redirectLocation) {\r\n  //     res.redirect(302, redirectLocation.pathname + redirectLocation.search);\r\n  //   } else if (renderProps) {\r\n  //     const componentsWithData = renderProps.components.filter(c => c.dataFetcher);\r\n  //     const dataFetchers = componentsWithData.map(c => c.dataFetcher({\r\n  //       params: renderProps.params, location: renderProps.location,\r\n  //       urlBase: 'http://localhost:3000', cookie: req.headers.cookie,\r\n  //     }));\r\n  //     Promise.all(dataFetchers).then((dataList) => {\r\n  //       let initialState = {};\r\n  //       dataList.forEach((namedData) => {\r\n  //         initialState = Object.assign(initialState, namedData);\r\n  //       });\r\n  //       const html = renderToString(\r\n  //         <ContextWrapper initialState={initialState} >\r\n  //           <RouterContext {...renderProps} />\r\n  //         </ContextWrapper>\r\n  //       );\r\n  //       res.status(200).send(template(html, initialState));\r\n  //     })\r\n  //     .catch(err => {\r\n  //       console.log(`Error rendering to string: ${err}`);\r\n  //     });\r\n  //   } else {\r\n  //     res.status(404).send('Not found');\r\n  //   }\r\n  // });\r\n});\r\n\r\nexport default renderedPageRouter;\r\n"],"sourceRoot":""}