{"version":3,"sources":["webpack:///./src/IssueList.jsx","webpack:///./src/IssueFilter.jsx","webpack:///external \"query-string\"","webpack:///external \"react-bootstrap\"","webpack:///./server/renderedPageRouter.jsx","webpack:///external \"isomorphic-fetch\""],"names":["__webpack_require__","_reactRouterDom","_reactBootstrap","qs","require","IssueRow","props","_react2","default","createElement","Link","to","issue","_id","substr","status","owner","created","toDateString","effort","completionDate","title","onClick","deleteIssue","className","IssueTable","IssueRows","issues","map","key","Table","condensed","hover","responsive","bordered","IssueList","context","_classCallCheck","this","_this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","call","console","log","staticContext","state","setFilter","bind","selectPage","React","Component","urlBase","_ref","location","query","assign","pageStr","_page","_offset","parseInt","_limit","search","keys","k","join","fetch","then","response","ok","json","data","error","Promise","reject","eventKey","router","push","pathname","id","_this2","method","loadData","showError","prevProps","prevState","oldQuery","newQuery","history","replace","stringify","q","_this3","records","forEach","Date","setState","alert","catch","err","newIssue","_this4","headers","Content-Type","body","JSON","updatedIssue","newIssues","concat","message","Panel","header","_IssueFilter2","choosePars","initFilter","_react","IssueFilter","params","parseUrl","effort_gte","effort_lte","change","onChangeStatus","onChangeEffortGte","onChangeEffortLte","clearFilter","applyFilter","resetFilter","newProps","changed","newFilter","e","target","value","effortString","match","Row","Col","xs","sm","md","lg","FormGroup","ControlLabel","FormControl","componentClass","onChange","InputGroup","Addon","ButtonToolbar","Button","bsStyle","disabled","module","exports","_reactRouter","renderedPageRouter","Router","test","i","metadata","totalCount","get","req","res","url","result","r","a","html","ReactDOMServer","renderToString","StaticRouter","Route","_extends","exact","path","component","write","end"],"mappings":"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","file":"0.e63672a3de1fe5cb6dbe.hot-update.js","sourcesContent":["// import IssueAdd from './IssueAdd.jsx'\r\nimport IssueFilter from './IssueFilter.jsx';\r\nimport React from 'react';\r\nimport 'isomorphic-fetch';\r\nimport { Link, } from 'react-router-dom';\r\nimport { Button, Glyphicon, Table, Panel, Pagination } from 'react-bootstrap';\r\nconst qs = require('query-string');\r\n\r\nconst IssueRow = (props) => {\r\n    function onDeleteClick() {\r\n        props.deleteIssue(props.issue._id);\r\n    }\r\n\r\n    return (\r\n        <tr>\r\n            <td><Link to={`/issues/${props.issue._id}`}>{props.issue._id.substr(-4)}</Link></td>\r\n            <td>{props.issue.status}</td>\r\n            <td>{props.issue.owner}</td>\r\n            <td>{props.issue.created.toDateString()}</td>\r\n            <td>{props.issue.effort}</td>\r\n            <td>{props.issue.completionDate ? props.issue.completionDate.toDateString() : ''}</td>\r\n            <td>{props.issue.title}</td>\r\n            <td>\r\n                <span onClick={onDeleteClick} className=\"glyphicon glyphicon-trash\"></span>\r\n            </td>\r\n        </tr>\r\n    );\r\n};\r\n\r\nfunction IssueTable(props) {\r\n    const IssueRows = props.issues.map(issue => <IssueRow key={issue._id} issue={issue} deleteIssue={props.deleteIssue} />);\r\n    return (\r\n        <Table condensed hover responsive bordered>\r\n            <thead>\r\n                <tr>\r\n                    <th>Id</th>\r\n                    <th>Status</th>\r\n                    <th>Owner</th>\r\n                    <th>Created</th>\r\n                    <th>Effort</th>\r\n                    <th>Completion Date</th>\r\n                    <th>Title</th>\r\n                    <th></th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {IssueRows}\r\n            </tbody>\r\n        </Table>\r\n    )\r\n}\r\n\r\nconst PAGE_SIZE = 10;\r\n\r\nclass IssueList extends React.Component {\r\n\r\n    static dataFetcher({ urlBase, location }) {\r\n        const query = Object.assign({}, location.query);\r\n        const pageStr = query._page;\r\n        if (pageStr) {\r\n            delete query._page;\r\n            query._offset = (parseInt(pageStr, 10) - 1) * PAGE_SIZE;\r\n        }\r\n        query._limit = PAGE_SIZE;\r\n        const search = Object.keys(query).map(k => `${k}=${query[k]}`).join('&');\r\n        return fetch(`${urlBase || ''}/api/issues?${search}`).then(response => {\r\n            if (!response.ok) return response.json().then(error => Promise.reject(error));\r\n            return response.json().then(data => ({ IssueList: data }));\r\n        });\r\n    }\r\n\r\n    // constructor() {\r\n    //     super();\r\n    //     this.state = { issues: [] };\r\n    //     this.choosePars = \"ykk\";\r\n    //     this.setFilter = this.setFilter.bind(this);\r\n    //     this.createIssue = this.createIssue.bind(this);\r\n    //     this.deleteIssue = this.deleteIssue.bind(this);\r\n    // }\r\n\r\n    constructor(props, context) {\r\n        super(props, context);\r\n        console.log(\"context的值是：\", this.props.staticContext);\r\n        // const data = context.initialState.IssueList ? context.initialState.IssueList\r\n        //   : { metadata: { totalCount: 0 }, records: [] };\r\n        // const issues = data.records;\r\n        // issues.forEach(issue => {\r\n        //   issue.created = new Date(issue.created);\r\n        //   if (issue.completionDate) {\r\n        //     issue.completionDate = new Date(issue.completionDate);\r\n        //   }\r\n        // });\r\n        this.state = {\r\n            issues: [],\r\n            //   totalCount: data.metadata.totalCount,\r\n        };\r\n\r\n        this.setFilter = this.setFilter.bind(this);\r\n        this.selectPage = this.selectPage.bind(this);\r\n        this.deleteIssue = this.deleteIssue.bind(this);\r\n    }\r\n\r\n    selectPage(eventKey) {\r\n        const query = Object.assign(this.props.location.query, { _page: eventKey });\r\n        this.props.router.push({ pathname: this.props.location.pathname, query });\r\n    }\r\n\r\n    deleteIssue(id) {\r\n        console.log(\"user want to delelte me```\");\r\n        fetch(`/api/issues/${id}`, { method: 'DELETE' }).then(response => {\r\n            console.log(\"the response data is: \", response);\r\n            if (!response.ok) this.props.showError('Failed to delete issue');\r\n            else {\r\n                console.log(\"start loaddata```\")\r\n                this.loadData(this.props.location.search);\r\n            }\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"开始执行请求函数\");\r\n        this.loadData(this.props.location.search);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        const oldQuery = prevProps.location.search;\r\n        const newQuery = this.props.location.search;\r\n        console.log(\"以前的数据是: \", oldQuery);\r\n        console.log(\"现在的数据是: \", newQuery);\r\n        if (oldQuery === newQuery) {\r\n            return;\r\n        }\r\n        console.log(\"the search is: \", this.props.location.search);\r\n        this.loadData(this.props.location.search);   //页面渲染完成以后调用\r\n    }\r\n\r\n    setFilter(query) {\r\n        console.log(\"this.props.history is 1: \", this.props.history);\r\n        this.props.history.replace('/issues?' + qs.stringify(query));\r\n        console.log(\"url即将替换为：\", '/issues?' + qs.stringify(query));\r\n        console.log(\"this.props.history is 2: \", this.props.history);\r\n    };\r\n\r\n    loadData(q) {\r\n        console.log(\"开始请求原始数据\");\r\n        console.log(this.props.location);\r\n        console.log(\"qqqqqq: \", q);\r\n        fetch(`/api/issues${q}`).then(response => {\r\n            console.log(\"原始数据请求成功: \", response);\r\n            if (response.ok) {\r\n                console.log(\"返回的response数据是： \", response);\r\n                response.json().then(data => {\r\n                    console.log(\"请求的数据调回: \", data);\r\n                    // console.log(data._metadata.total_count);\r\n                    data.records.forEach(issue => {\r\n                        issue.created = new Date(issue.created);\r\n                        if (issue.completionDate) {\r\n                            issue.completionDate = new Date(issue.completionDate);\r\n                        }\r\n                    });\r\n                    console.log(\"最后需要渲染的数据数据:\", data.records);\r\n                    this.setState({ issues: data.records });\r\n                });\r\n            } else {\r\n                response.json().then(error => {\r\n                    alert(\"Failed\");\r\n                })\r\n            }\r\n        }).catch(err => {\r\n            alert(\"Error\")\r\n        });\r\n    }\r\n\r\n    createIssue(newIssue) {\r\n        console.log(\"触发post请求\");\r\n        fetch('/api/issues', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(newIssue),\r\n        }).then(response => { return response.json() }).then(\r\n            updatedIssue => {\r\n                console.log(\"here 1: \" + updatedIssue)\r\n                updatedIssue.created = new Date(updatedIssue.created);\r\n                console.log(updatedIssue.created);\r\n                if (updatedIssue.completionDate) {\r\n                    updatedIssue.completionDate = new Date(updatedIssue.completionDate);\r\n                }\r\n                const newIssues = this.state.issues.concat(updatedIssue);\r\n                console.log(newIssues);\r\n                this.setState({ issues: newIssues });\r\n            }\r\n        ).catch(err => {\r\n            alert(err.message);\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>This is ykk's place.</h1>\r\n                <Panel header='Filter'>\r\n                    <IssueFilter setFilter={this.setFilter} choosePars={this.choosePars} initFilter={this.props.location.search} />\r\n                </Panel>\r\n                <IssueTable issues={this.state.issues} deleteIssue={this.deleteIssue} />\r\n                <hr />\r\n                {/* <IssueAdd createIssue={this.createIssue} /> */}\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Col, Row, FormGroup, FormControl, ControlLabel, InputGroup, ButtonToolbar, Button } from 'react-bootstrap';\r\nconst qs = require('query-string');\r\n\r\nexport default class IssueFilter extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\"输出：\", props);\r\n        const params = {};\r\n        this.params = qs.parseUrl(props.initFilter).query;\r\n        console.log(\"输出 params : \", params);\r\n        this.state = {\r\n            status: params.status || '',\r\n            effort_gte: params.effort_gte || '',\r\n            effort_lte: params.effort_lte || '',\r\n            change: false,\r\n        };\r\n        console.log(\"输出 this.state : \", this.state);\r\n        this.onChangeStatus = this.onChangeStatus.bind(this);\r\n        this.onChangeEffortGte = this.onChangeEffortGte.bind(this);\r\n        this.onChangeEffortLte = this.onChangeEffortLte.bind(this);\r\n        this.clearFilter = this.clearFilter.bind(this);\r\n        this.applyFilter = this.applyFilter.bind(this);\r\n        this.resetFilter = this.resetFilter.bind(this);\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        console.log(\"输出 newProps：\", newProps);\r\n        this.setState({\r\n            status: this.params.status || '',\r\n            effort_gte: this.params.effort_gte || '',\r\n            effort_lte: this.params.effort_lte || '',\r\n            changed: false,\r\n        })\r\n    }\r\n\r\n    resetFilter() {\r\n        this.setState({\r\n            status: this.params.status || '',\r\n            effort_gte: this.params.effort_gte || '',\r\n            effort_lte: this.params.effort_lte || '',\r\n            changed: false,\r\n        })\r\n    }\r\n\r\n    applyFilter() {\r\n        const newFilter = {};\r\n        if (this.state.status) newFilter.status = this.state.status;\r\n        if (this.state.effort_gte) newFilter.effort_gte = this.state.effort_gte;\r\n        if (this.state.effort_lte) newFilter.effort_lte = this.state.effort_lte;\r\n        console.log(\"提交上去的数据：\", newFilter);\r\n        this.props.setFilter(newFilter);\r\n    }\r\n\r\n    clearFilter(e) {\r\n        this.props.setFilter({});\r\n    }\r\n\r\n    onChangeStatus(e) {\r\n        console.log(\"选择器在变化：\", e);\r\n        this.setState({ status: e.target.value, changed: true });\r\n    }\r\n\r\n    onChangeEffortGte(e) {\r\n        const effortString = e.target.value;\r\n        console.log(\"gte在变化：\", effortString);\r\n        if (effortString.match(/^\\d*$/)) {\r\n            this.setState({ effort_gte: e.target.value, changed: true });\r\n        }\r\n    }\r\n\r\n    onChangeEffortLte(e) {\r\n        const effortString = e.target.value;\r\n        console.log(\"lte在变化：\", effortString);\r\n        if (effortString.match(/^\\d*$/)) {\r\n            this.setState({ effort_lte: e.target.value, changed: true });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const Separator = () => <span> | </span>;\r\n        return (\r\n            // <div>\r\n            //     Status:\r\n            //     <select value={this.state.status} onChange={this.onChangeStatus}>\r\n            //         <option value=\"\">(Any)</option>\r\n            //         <option value=\"New\">New</option>\r\n            //         <option value=\"Open\">Open</option>\r\n            //         <option value=\"Assigned\">Assigned</option>\r\n            //         <option value=\"Fixed\">Fixed</option>\r\n            //         <option value=\"Verified\">Verified</option>\r\n            //         <option value=\"Closed\">Closed</option>\r\n            //     </select>\r\n            //     &nbsp;Effort between:\r\n            //     <input size={5} value={this.state.effort_gte} onChange={this.onChangeEffortGte}></input>\r\n            //     &nbsp;-&nbsp;\r\n            //     <input size={5} value={this.state.effort_lte} onChange={this.onChangeEffortLte}></input>\r\n            //     <button onClick={this.applyFilter}>Apply</button>\r\n            //     <button onClick={this.resetFilter} disabled={!this.state.changed}>Reset</button>\r\n            //     <button onClick={this.clearFilter}>Clear</button>\r\n            // </div>\r\n            <Row>\r\n                <Col xs={6} sm={4} md={3} lg={2}>\r\n                    <FormGroup>\r\n                        <ControlLabel>Status</ControlLabel>\r\n                        <FormControl\r\n                            componentClass=\"select\" value={this.state.status}\r\n                            onChange={this.onChangeStatus}\r\n                        >\r\n                            <option value=\"\">(Any)</option>\r\n                            <option value=\"New\">New</option>\r\n                            <option value=\"Open\">Open</option>\r\n                            <option value=\"Assigned\">Assigned</option>\r\n                            <option value=\"Fixed\">Fixed</option>\r\n                            <option value=\"Verified\">Verified</option>\r\n                            <option value=\"Closed\">Closed</option>\r\n                        </FormControl>\r\n                    </FormGroup>\r\n                </Col>\r\n                <Col xs={6} sm={4} md={3} lg={2}>\r\n                    <FormGroup>\r\n                        <ControlLabel>Effort</ControlLabel>\r\n                        <InputGroup>\r\n                            <FormControl value={this.state.effort_gte} onChange={this.onChangeEffortGte} />\r\n                            <InputGroup.Addon>-</InputGroup.Addon>\r\n                            <FormControl value={this.state.effort_lte} onChange={this.onChangeEffortLte} />\r\n                        </InputGroup>\r\n                    </FormGroup>\r\n                </Col>\r\n                <Col xs={6} sm={4} md={3} lg={2}>\r\n                    <FormGroup>\r\n                        <ControlLabel>&nbsp;</ControlLabel>\r\n                        <ButtonToolbar>\r\n                            <Button bsStyle=\"primary\" onClick={this.applyFilter}>Apply</Button>\r\n                            <Button onClick={this.resetFilter} disabled={!this.state.changed}>Reset</Button>\r\n                            <Button onClick={this.clearFilter}>Clear</Button>\r\n                        </ButtonToolbar>\r\n                    </FormGroup>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}","module.exports = require(\"query-string\");","module.exports = require(\"react-bootstrap\");","import React from 'react';\r\nimport ReactDOMServer from \"react-dom/server\";\r\nimport { StaticRouter } from 'react-router';\r\nimport Router from 'express';\r\nimport { Route } from 'react-router-dom';\r\n\r\nimport IssueList from '../src/IssueList.jsx';\r\n\r\nconst renderedPageRouter = new Router();\r\n\r\nclass test extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(\"props的值是：\", this.props.staticContext);\r\n    this.state = {\r\n      issues: this.props.staticContext.i.metadata.totalCount,\r\n      //   totalCount: data.metadata.totalCount,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* <button>{this.state.issues}</button> */}\r\n        <button>{this.state.issues}</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst test2 = () => <p>Page is test2222222</p>;\r\n\r\nrenderedPageRouter.get('*', (req, res) => {\r\n  console.log(\"服务器启用成功\");\r\n  console.log(`http://127.0.0.1:3000/api${req.url}`);\r\n  fetch(`http://127.0.0.1:3000/api${req.url}`).then(response => {\r\n    return response.json();\r\n  }).then(result => {\r\n    console.log('从服务器返回的数据：', result);\r\n    const r = { i: result };\r\n    const context = { a: 123 };\r\n    const html = ReactDOMServer.renderToString(\r\n      <StaticRouter location={req.url} context={r}>\r\n        {/* <routes /> */}\r\n        <Route exact path='/issues' component={test} {...context} />\r\n        <Route exact path='/IssueList' component={IssueList}  {...context}/>\r\n      </StaticRouter>\r\n    );\r\n    res.write(`\r\n    <!doctype html>\r\n    <div id=\"app\">${html}</div>\r\n  `);\r\n    res.end();\r\n  })\r\n});\r\n\r\nexport default renderedPageRouter;\r\n","module.exports = require(\"isomorphic-fetch\");"],"sourceRoot":""}